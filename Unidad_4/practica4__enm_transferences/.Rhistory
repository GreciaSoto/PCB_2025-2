calib_colliei <- ellipsoid_calibration(colliei.data.split, species = "area_m", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "colliei_calibration_results", overwrite = TRUE)
sets <- list(set_1 = c("PC1", "PC2", "PC3"),
set_2 = c("PC1", "PC2", "PC4")) # change as needed
variable_sets <- prepare_sets(pca_vars_6[[1]][[1:4]], sets)
calib_colliei <- ellipsoid_calibration(colliei.data.split, species = "area_m", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "colliei_calibration_results", overwrite = TRUE)
##
methods <- c("covmat", "mve1")
sets <- list(set_1 = c("PC1", "PC2", "PC3"),
set_2 = c("PC1", "PC2", "PC4")) # change as needed
variable_sets <- prepare_sets(pca_vars_6[[1]][[1:4]], sets)
calib_colliei <- ellipsoid_calibration(colliei.data.split, species = "area_m", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "colliei_calibration_results", overwrite = TRUE)
# vars_6_subset <- subset(psilocalo.subset.vars,c("bio03", "bio05","bio06", "bio13", "bio14", "bio18"))
vars_6_subset
#PCA for 6 vars
pca_vars_6 <- spca(vars_6_subset)
pca_vars_6
plot(pca_vars_6[[1]])
##
methods <- c("covmat", "mve1")
sets <- list(set_1 = c("PC1", "PC2", "PC3"),
set_2 = c("PC1", "PC2", "PC4")) # change as needed
variable_sets <- prepare_sets(pca_vars_6[[1]][[1:4]], sets)
calib_colliei <- ellipsoid_calibration(colliei.data.split, species = "area_m", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "colliei_calibration_results", overwrite = TRUE)
area_calibration_stack_mask
# Ellipses in the geography
#PCA for 6 vars
pca_vars_6 <- spca(area_calibration_stack_mask)
pca_vars_6
plot(pca_vars_6[[1]])
calib_colliei <- ellipsoid_calibration(colliei.data.split, species = "area_m", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "colliei_calibration_results", overwrite = TRUE)
calib_psilorhinus <- ellipsoid_calibration(colliei.data.split, species = "area_m", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
# Ellipses in the geography
#PCA for 6 vars
pca_vars_6 <- spca(area_calibration_stack_mask)
pca_vars_6
calib_psilorhinus <- ellipsoid_calibration(colliei.data.split, species = "area_m", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "area_m", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
psilorhinus.data.split
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
calib_colliei <- ellipsoid_calibration(colliei.data.split, species = "area_m", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "colliei_calibration_results", overwrite = TRUE)
psilorhinus.data.split
presences_sp_df <- is.na(presences_sp)
presences_sp_df
presences_sp_df
presences_sp_df [1:50 , ]
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df [1:50 , ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
presences_sp_df [1:50 , ]
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df [1:20, ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
presences_sp_df [1:20, ]
#Read csv
presences_sp <- read.csv("C:/Users/vicen/Documents/pcb_2025_2/Unidad_4/practica4__enm_transferences/databases/pmorio_20km.csv")
presences_sp_df <- as.data.frame(presences_sp)
presences_sp_df [1:20, ]
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df [1:20, ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df [1:20, ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df [1:50, ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df [1:100, ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df [1:80, ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df [1:70, ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df [1:75, ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df [1:78, ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df [1:79, ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df [1:80, ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
#Read csv
presences_sp <- read.csv("C:/Users/vicen/Documents/pcb_2025_2/Unidad_4/practica4__enm_transferences/databases/pmorio_20km.csv")
presences_sp_df <- as.data.frame(presences_sp)
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df [1:80, ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df [1:150, ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df [1:120, ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df [1:140, ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df [1:149, ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df [1:146, ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df [1:143, ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df [1:144, ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
#Read csv
presences_sp <- read.csv("C:/Users/vicen/Documents/pcb_2025_2/Unidad_4/practica4__enm_transferences/databases/pmorio_20km.csv")
presences_sp_df <- as.data.frame(presences_sp)
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df [1:144, ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
#Read csv
presences_sp <- read.csv("C:/Users/vicen/Documents/pcb_2025_2/Unidad_4/practica4__enm_transferences/databases/pmorio_20km.csv")
presences_sp_df <- as.data.frame(presences_sp)
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df [1:144, ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df, method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
#Read csv
presences_sp <- read.csv("C:/Users/vicen/Documents/pcb_2025_2/Unidad_4/practica4__enm_transferences/databases/pmorio_20km.csv")
presences_sp_df <- as.data.frame(presences_sp)
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df, method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
#
methods <- c("covmat", "mve1")
sets <- list(set_1 = c("PC1", "PC2", "PC3"),
set_2 = c("PC1", "PC2", "PC4")) # change as needed
variable_sets <- prepare_sets(pca_vars_6[[1]][[1:4]], sets)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
presences_sp_df[1:164, ]
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df[1:164, ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
#
methods <- c("covmat", "mve1")
sets <- list(set_1 = c("PC1", "PC2", "PC3"),
set_2 = c("PC1", "PC2", "PC4")) # change as needed
variable_sets <- prepare_sets(pca_vars_6[[1]][[1:4]], sets)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
#Read csv
presences_sp <- read.csv("C:/Users/vicen/Documents/pcb_2025_2/Unidad_4/practica4__enm_transferences/databases/pmorio_20km.csv")
presences_sp_df <- as.data.frame(presences_sp)
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df, method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
#
methods <- c("covmat", "mve1")
sets <- list(set_1 = c("PC1", "PC2", "PC3"),
set_2 = c("PC1", "PC2", "PC4")) # change as needed
variable_sets <- prepare_sets(pca_vars_6[[1]][[1:4]], sets)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
#Read csv
presences_sp <- read.csv("C:/Users/vicen/Documents/pcb_2025_2/Unidad_4/practica4__enm_transferences/databases/pmorio_20km.csv")
presences_sp_df <- as.data.frame(presences_sp)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df[1:162, ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df[1:142, ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df[1:122, ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df[1:132, ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df[1:140, ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df[1:137, ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df[1:135, ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df[1:134, ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df[1:136, ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df[1:136, ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df[1:135, ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
#Read csv
presences_sp <- read.csv("C:/Users/vicen/Documents/pcb_2025_2/Unidad_4/practica4__enm_transferences/databases/pmorio_20km.csv")
presences_sp_df <- as.data.frame(presences_sp)
# RAMDOMIZATION DO NOT REPEAT
psilorhinus.data.split <- split_data(presences_sp_df[1:135, ], method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.80)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
calib_psilorhinus <- ellipsoid_calibration(psilorhinus.data.split, species = "Species", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "psilorhinus_calibration_results", overwrite = TRUE)
calib_psilorhinus
###colliei
psilorhinus.data.split$train[ , c("area_m", "Longitude", "Latitude")]
###colliei
psilorhinus.data.split[ , c("area_m", "Longitude", "Latitude")]
###colliei
psilorhinus.data.split[ , c("Species", "Longitude", "Latitude")]
psilorhinus.data.split
psilorhinus.extract.pca <- raster::extract(pca_vars_6[[1]][[1:3]], psilorhinus.data.split$train[ , c( "Longitude", "Latitude")])
psilorhinus.extract.pca <-na.omit(psilorhinus.extract.pca)
niche_sub <- ntbox::cov_center(psilorhinus.extract.pca, mve = T,
level = 0.95,vars = c(1,2,3))
psilorhinus_niche_geography <- ntbox::ellipsoidfit(envlayers = pca_vars_6$pc_layers[[c(1,2,3)]],
centroid = niche_sub$centroid,
covar = niche_sub$covariance, size=1)
psilorhinus_niche_geography
plot(psilorhinus_niche_geography)
plot(psilorhinus_niche_geography$suitRaster)
##################
# cut all layers with total area calibration
transference_area <- crop(world_vars_subset, extent(america_back))
plot(america_back)
plot(america_back)
extent(america_back)
america_back
extent(america_back)
r <- raster()
extent(r)
r <- raster()
extent(r)
extent(c(0, 20, 0, 20))
plot ()
r <- raster()
extent(r)
extent(c(-120 , -80 , 7,35))
plot ()
plot (r)
extent(r)
r <- extent(c(-120 , -80 , 7,35))
r
plot (r)
america_back <- extent(c(-120 , -80 , 7,35))
plot (america_back)
transference_area <- crop(world_vars_subset, extent(america_back))
plot(america_back)
plot(transference_area)
transference_area_stack <- mask(transference_area, america_back)
plot(transference_area_stack)
america_back
transference_area <- crop(world_vars_subset, extent(america_back2))
america_back2 <- extent(c(-120 , -80 , 7,35))
transference_area <- crop(world_vars_subset, extent(america_back2))
transference_area
plot(america_back2)
plot(transference_area)
transference_area_stack <- mask(transference_area, america_back)
transference_area_stack <- mask(transference_area, america_back2)
# STACK
present_stack.s.c <- stack(transference_area)
psilorhinus_geography <- ellipsoid_model(data = formosa.data.split$train[ ,c(22,1,2)],
species = "area_m",
longitude = "Longitude",
latitude = "Latitude",
raster_layers = present_stack.s.c,  #vars.formosa.stack[[c(1,2,3)]],
method = "covmat",
level = 99,
replicates = 1,
replicate_type = "bootstrap",
bootstrap_percentage = 80,
projection_variables = list(projection = vars_6_subset),
prediction = "suitability",
return_numeric = TRUE,
format = "GTiff",
overwrite = TRUE,
output_directory = paste0("geographic_transferences/"))
