#PCA de variables ambientales
scale_drome <- scale(drome$env[,-1])
pca_drome <- princomp(scale_drome)
summary(pca_drome)
#PCA de variables ambientales
scale_drome <- scale(drome$env[,-1])
pca_drome <- princomp(scale_drome)
summary(pca_drome)
pca2_drome <- prcomp(drome$env[,-1], scale = TRUE)
pca2_summary <- summary(pca2_drome)
barplot (pca2_summary$importance[2, ])
#PCA de variables ambientales
pca_drome <- prcomp(drome$env[,-1], scale = TRUE)
pca_summary <- summary(pca_drome)
barplot (pca_summary$importance[2, ])
pca_summary
barplot (pca_summary$importance[2, ])
# PCA
pca_drome <- dudi.pca(scale_drome, scale = FALSE, nf = 6, scannf = FALSE)
summary(pca_drome)
#Summary plot
niche_description <- niche(pca_drome, drome$fish, scann = FALSE)
niche_description
## Revisar argumentos del objeto
#Axis
g1 <- s.corcircle(niche_description$as)
# Habiendo descrito las vars ambientales, vamos a decribir el sistema.
# PCA
pca_drome <- dudi.pca(drome$env[,-1], scale = TRUE, nf = 6, scannf = FALSE)
library(vegan3d)
library(knitr)
library(subniche)
library(siar)
library(devtools)
library(adegraphics)
library(ade4)
library(vegan)
library(FactoMineR)
library(factoextra)
library(corrplot)
# Color by cos2 values: quality on the factor map
fviz_pca_var(pca_drome, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
)
pca_drome$var$contrib
# Habiendo descrito las vars ambientales, vamos a decribir el sistema.
# PCA
pca_drome <- dudi.pca(drome$env[,-1], scale = TRUE, nf = 6, scannf = FALSE)
summary(pca_drome)
#Summary plot
niche_description <- niche(pca_drome, drome$fish, scann = FALSE)
niche_description
g10 <- plot(niche_description)
class(g10)
names(g10)
g10$niches
g10$species
## Revisar argumentos del objeto
#Axis
g1 <- s.corcircle(niche_description$as)
zoom(g1, zoom = 0.7)
# Vars ambientales
g2 <- s.corcircle(niche_description$c1)
adegpar("plabels")
adegpar(plabels = list(col = "blue", cex = 0.5, alpha = 0.5, boxes = list(alpha = 0.5)),  paxes.draw = TRUE)
g2 <- s.corcircle(niche_description$c1)
# Localidades
plot(niche_description$ls, pch = 19)
text(niche_description$ls,
labels = row.names(drome$fish),
cex = 0.6, pos = 4, col = "blue")
# Localidades y especies
plot(niche_description$ls, pch = 19)
text(niche_description$li,
labels = row.names(niche_description$l1),
cex = 0.6, pos = 4, col = "blue")
# Niches
s.distri(niche_description$ls, dfdistri = drome$fish)
########################################
#Some statistics
kable(niche.param(niche_description))
# Localidades y especies
plot(niche_description$ls, pch = 19)
text(niche_description$li,
labels = row.names(niche_description$l1),
cex = 0.6, pos = 4, col = "blue")
# Explanation of the values
# The variability of the niche of species j is decomposed into three components:
# (1) Inertia of species j as the weighted sum of squared distances to the origin.
# (2) Index of marginality, i.e., the average distance of species j to the uniform distribution.
# Alta correlación entre Inertia and OMI
plot(niche.param(niche_description)[ , 1], niche.param(niche_description)[ , 2])
# Explanation of the values
# The variability of the niche of species j is decomposed into three components:
# (1) Inertia of species j as the weighted sum of squared distances to the origin.
# (2) Index of marginality, i.e., the average distance of species j to the uniform distribution.
# Alta correlación entre Inertia and OMI
plot(niche.param(niche_description)[ , 1], niche.param(niche_description)[ , 2], pch = 19)
########################################
#Some statistics
kable(niche.param(niche_description))
# Localidades y especies
plot(niche_description$ls, pch = 19)
text(niche_description$li,
labels = row.names(niche_description$l1),
cex = 0.6, pos = 4, col = "blue")
# Explanation of the values
# The variability of the niche of species j is decomposed into three components:
# (1) Inertia of species j as the weighted sum of squared distances to the origin.
# (2) Index of marginality, i.e., the average distance of species j to the uniform distribution.
# Un valor alto de OMI se interpreta como una posición “marginal” del nicho.
# Alta correlación entre Inertia and OMI
plot(niche.param(niche_description)[ , 1], niche.param(niche_description)[ , 2], pch = 19)
# Explanation of the values
# The variability of the niche of species j is decomposed into three components:
# (1) Inertia of species j as the weighted sum of squared distances to the origin.
# (2) Index of marginality, i.e., the average distance of species j to the uniform distribution.
# Un valor alto de OMI se interpreta como una posición “marginal” del nicho.
# Alta correlación entre Inertia and OMI
plot(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1], pch = 19)
# Explanation of the values
# The variability of the niche of species j is decomposed into three components:
# (1) Inertia of species j as the weighted sum of squared distances to the origin.
# (2) Index of marginality, i.e., the average distance of species j to the uniform distribution.
# Un valor alto de OMI se interpreta como una posición “marginal” del nicho.
# Alta correlación entre Inertia and OMI
plot(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1], pch = 19)
(niche_description)[ , 2]
niche_description
niche.param(niche_description)[ , 2]
niche.param(niche_description)
# (3) Index of tolerance or niche breadth.
plot(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1], pch = 19,
size = c(niche.param(niche_description)[ , 3]))
niche.param(niche_description)[ , 3])
niche.param(niche_description)[ , 3]
# (3) Index of tolerance or niche breadth.
plot(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1], pch = 19,
size = niche.param(niche_description)[ , 3])
niche.param(niche_description)
# Explanation of the values
# The variability of the niche of species j is decomposed into three components:
# (1) Inertia of species j as the weighted sum of squared distances to the origin.
# (2) Index of marginality, i.e., the average distance of species j to the uniform distribution.
# Un valor alto de OMI se interpreta como una posición “marginal” del nicho.
# Alta correlación entre Inertia and OMI
plot(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1],
pch = 19, labels = rownames(niche.param(niche_description)))
rownames(niche.param(niche_description))
niche.param(niche_description)
rownames(niche.param(niche_description))
# Explanation of the values
# The variability of the niche of species j is decomposed into three components:
# (1) Inertia of species j as the weighted sum of squared distances to the origin.
# (2) Index of marginality, i.e., the average distance of species j to the uniform distribution.
# Un valor alto de OMI se interpreta como una posición “marginal” del nicho.
# Alta correlación entre Inertia and OMI
plot(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1],
pch = 19, labels = rownames(niche.param(niche_description)))
rownames(niche.param(niche_description))
rownames(niche.param(niche_description))
# Explanation of the values
# The variability of the niche of species j is decomposed into three components:
# (1) Inertia of species j as the weighted sum of squared distances to the origin.
# (2) Index of marginality, i.e., the average distance of species j to the uniform distribution.
# Un valor alto de OMI se interpreta como una posición “marginal” del nicho.
# Alta correlación entre Inertia and OMI
plot(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1],
pch = 19, labels = as.factor(rownames(niche.param(niche_description))))
niche.param(niche_description)
niche.param(niche_description)
niche.param(niche_description)
text(row.names(niche.param(niche_description)),
labels = row.names(niche.param(niche_description)),
cex = 0.6, pos = 4, col = "blue")
# Explanation of the values
# The variability of the niche of species j is decomposed into three components:
# (1) Inertia of species j as the weighted sum of squared distances to the origin.
# (2) Index of marginality, i.e., the average distance of species j to the uniform distribution.
# Un valor alto de OMI se interpreta como una posición “marginal” del nicho.
# Alta correlación entre Inertia and OMI
plot(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1],
pch = 19)
text(row.names(niche.param(niche_description)),
labels = row.names(niche.param(niche_description)),
cex = 0.6, pos = 4, col = "blue")
row.names(niche.param(niche_description))
niche_description$li
text(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1],
labels = row.names(niche.param(niche_description)),
cex = 0.6, pos = 4, col = "blue")
text(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1],
labels = row.names(niche.param(niche_description)),
cex = 0.6, pos = 1, col = "blue")
# Explanation of the values
# The variability of the niche of species j is decomposed into three components:
# (1) Inertia of species j as the weighted sum of squared distances to the origin.
# (2) Index of marginality, i.e., the average distance of species j to the uniform distribution.
# Un valor alto de OMI se interpreta como una posición “marginal” del nicho.
# Alta correlación entre Inertia and OMI
plot(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1],
pch = 19)
text(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1],
labels = row.names(niche.param(niche_description)),
cex = 0.6, pos = 1, col = "blue")
# (3) Index of tolerance or niche breadth.
plot(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1], pch = 19,
size = niche.param(niche_description)[ , 3])
# (3) Index of tolerance or niche breadth.
plot(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1],
pch = 19)
text(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1],
labels = row.names(niche.param(niche_description)),
cex = 0.6, pos = 1, col = "blue")
# (3) Index of tolerance or niche breadth.
plot(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1],
pch = 19)
text(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1],
labels = row.names(niche.param(niche_description)),
cex = 0.6, pos = 1, col = "blue")
# (3) Index of tolerance or niche breadth.
plot(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1],
pch = 19, size(c(1,2,3) ))
# (3) Index of tolerance or niche breadth.
plot(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1],
pch = 19, size = c(1,2,3))
# (3) Index of tolerance or niche breadth.
plot(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1],
pch = 19, cex = c(1,2,3))
niche.param(niche_description)
# (3) Index of tolerance or niche breadth.
plot(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1],
pch = 19, cex = niche.param(niche_description)[ , 3])
text(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1],
labels = row.names(niche.param(niche_description)),
cex = 0.6, pos = 1, col = "blue")
# (3) Index of tolerance or niche breadth.
plot(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1],
pch = 19, cex = niche.param(niche_description)[ , 3])
text(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1],
labels = row.names(niche.param(niche_description)),
cex = 0.6, pos = 1, col = "blue")
niche.param(niche_description)
# (3) Index of tolerance or niche breadth.
plot(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1],
pch = 19, cex = niche.param(niche_description)[ , 3])
text(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1],
labels = row.names(niche.param(niche_description)),
cex = 0.6, pos = 1, col = "blue")
text(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1],
labels = row.names(niche.param(niche_description)),
cex = 0.6, pos = 1, col = "blue")
niche.param(niche_description)[ , 3]
niche.param(niche_description)
# (3) Index of tolerance or niche breadth.
plot(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1],
pch = 19, cex = niche.param(niche_description)[ , 4])
text(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1],
labels = row.names(niche.param(niche_description)),
cex = 0.6, pos = 1, col = "blue")
niche.param(niche_description)
# Explanation of the values
# The variability of the niche of species j is decomposed into three components:
# (1) Inertia of species j as the weighted sum of squared distances to the origin.
# (2) Index of marginality, i.e., the average distance of species j to the uniform distribution.
# Un valor alto de OMI se interpreta como una posición “marginal” del nicho.
# Alta correlación entre Inertia and OMI
plot(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1],
pch = 19)
# Explanation of the values
# The variability of the niche of species j is decomposed into three components:
# (1) Inertia of species j as the weighted sum of squared distances to the origin.
# (2) Index of marginality, i.e., the average distance of species j to the uniform distribution.
# Un valor alto de OMI se interpreta como una posición “marginal” del nicho.
# Alta correlación entre Inertia and OMI
plot(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1],
pch = 19)
text(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1],
labels = row.names(niche.param(niche_description)),
cex = 0.6, pos = 1, col = "blue")
cor(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1])
r = cor(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1])
r
#Check
drome
# Para describir la variación ambiental
#PCA de variables ambientales
pca_drome <- PCA(drome$env[,-1], scale.unit = TRUE, ncp = 5, graph = TRUE)
#Contribución de cada componente
fviz_eig(pca_drome, addlabels = TRUE)
#Contribución de cada variable a cada componente
var <- get_pca_var(pca_drome)
corrplot(var$cos2, is.corr=FALSE)
pca_drome$var$contrib
# Color by cos2 values: quality on the factor map
fviz_pca_var(pca_drome, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
)
pca_drome$var$contrib
# Habiendo descrito las vars ambientales, vamos a decribir el sistema.
# PCA
pca_drome <- dudi.pca(drome$env[,-1], scale = TRUE, nf = 6, scannf = FALSE)
summary(pca_drome)
#Summary plot
niche_description <- niche(pca_drome, drome$fish, scann = FALSE)
niche_description
g10 <- plot(niche_description)
class(g10)
names(g10)
g10$niches
g10$species
## Revisar argumentos del objeto
#Axis
g1 <- s.corcircle(niche_description$as)
zoom(g1, zoom = 0.7)
# Vars ambientales
g2 <- s.corcircle(niche_description$c1)
adegpar("plabels")
adegpar(plabels = list(col = "blue", cex = 0.5, alpha = 0.5, boxes = list(alpha = 0.5)),  paxes.draw = TRUE)
g2 <- s.corcircle(niche_description$c1)
# Localidades
plot(niche_description$ls, pch = 19)
text(niche_description$ls,
labels = row.names(drome$fish),
cex = 0.6, pos = 4, col = "blue")
# Localidades y especies
plot(niche_description$ls, pch = 19)
text(niche_description$li,
labels = row.names(niche_description$l1),
cex = 0.6, pos = 4, col = "blue")
# Niches
s.distri(niche_description$ls, dfdistri = drome$fish)
#####
#Some statistics
kable(niche.param(niche_description))
# Continuamos trabajando con nuestra base.
# Data
drome$fish
# Vars ambientales para cada localidad
drome$env[ ,2:7]
# Plot
vare.cca <- cca(drome$fish ~ Altitude+DSou+slope+width+Lmin+Dicharge,
data=drome$env[ ,2:7])
#Plot 2d
plot(vare.cca)
# Resumen de los estadísticos
summary(vare.cca)
vare.cca2 <- cca(drome$fish ~ Lmin+Dicharge,
data=drome$env[ ,2:7])
vare.cca
vare.cca2
vare.cca
vare.cca2
vare.cca2 <- cca(drome$fish ~ Altitude+Lmin+Dicharge,
data=drome$env[ ,2:7])
vare.cca3 <- cca(drome$fish ~ Altitude+Lmin+Dicharge,
data=drome$env[ ,2:7])
vare.cca3
drome$fish
# Canonical correspondece analysis
vare.cca <- cca(drome$fish ~ Altitude+DSou+slope+width+Lmin+Dicharge,
data=drome$env[ ,2:7])
#Plot 2d
plot(vare.cca)
# Resumen de los estadísticos
summary(vare.cca)
vif.cca(vare.cca3)
vif.cca(vare.cca2)
vif.cca(vare.cca)
# Testing the significance of the CCA model:
anova.cca(vare.cca)
# Testing the significance of the CCA model:
anova.cca(vare.cca, by="axis")
#Check
drome
# Para describir la variación ambiental
#PCA de variables ambientales
pca_drome <- PCA(drome$env[,-1], scale.unit = TRUE, ncp = 5, graph = TRUE)
#Contribución de cada componente
fviz_eig(pca_drome, addlabels = TRUE)
#Contribución de cada variable a cada componente
var <- get_pca_var(pca_drome)
corrplot(var$cos2, is.corr=FALSE)
pca_drome$var$contrib
# Color by cos2 values: quality on the factor map
fviz_pca_var(pca_drome, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
)
pca_drome$var$contrib
# Habiendo descrito las vars ambientales, vamos a decribir el sistema.
# PCA
pca_drome <- dudi.pca(drome$env[,-1], scale = TRUE, nf = 6, scannf = FALSE)
summary(pca_drome)
#Summary plot
niche_description <- niche(pca_drome, drome$fish, scann = FALSE)
niche_description
g10 <- plot(niche_description)
class(g10)
names(g10)
g10$niches
g10$species
## Revisar argumentos del objeto
#Axis
g1 <- s.corcircle(niche_description$as)
zoom(g1, zoom = 0.7)
# Vars ambientales
g2 <- s.corcircle(niche_description$c1)
adegpar("plabels")
adegpar(plabels = list(col = "blue", cex = 0.5, alpha = 0.5, boxes = list(alpha = 0.5)),  paxes.draw = TRUE)
g2 <- s.corcircle(niche_description$c1)
# Localidades
plot(niche_description$ls, pch = 19)
text(niche_description$ls,
labels = row.names(drome$fish),
cex = 0.6, pos = 4, col = "blue")
# Localidades y especies
plot(niche_description$ls, pch = 19)
text(niche_description$li,
labels = row.names(niche_description$l1),
cex = 0.6, pos = 4, col = "blue")
# Niches
s.distri(niche_description$ls, dfdistri = drome$fish)
#####
#Some statistics
kable(niche.param(niche_description))
# Explanation of the values
# The variability of the niche of species j is decomposed into three components:
# (1) Inertia of species j as the weighted sum of squared distances to the origin.
# (2) Index of marginality, i.e., the average distance of species j to the uniform distribution.
# Un valor alto de OMI se interpreta como una posición “marginal” del nicho.
# Alta correlación entre Inertia and OMI
plot(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1],
pch = 19)
text(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1],
labels = row.names(niche.param(niche_description)),
cex = 0.6, pos = 1, col = "blue")
r = cor(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1])
# (3) Index of tolerance or niche breadth.
plot(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1],
pch = 19, cex = niche.param(niche_description)[ , 4])
r
0.92*0.92
# (3) Index of tolerance or niche breadth.
plot(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1],
pch = 19, cex = niche.param(niche_description)[ , 4])
text(niche.param(niche_description)[ , 2], niche.param(niche_description)[ , 1],
labels = row.names(niche.param(niche_description)),
cex = 0.6, pos = 1, col = "blue")
# Continuamos trabajando con nuestra base.
# Data
drome$fish
# Vars ambientales para cada localidad
drome$env[ ,2:7]
# Canonical correspondece analysis
vare.cca <- cca(drome$fish ~ Altitude+DSou+slope+width+Lmin+Dicharge,
data=drome$env[ ,2:7])
#Plot 2d
plot(vare.cca)
# Resumen de los estadísticos
summary(vare.cca)
vare.cca2 <- cca(drome$fish ~ Lmin+Dicharge,
data=drome$env[ ,2:7])
vare.cca
vare.cca2
vare.cca3 <- cca(drome$fish ~ Altitude+Lmin+Dicharge,
data=drome$env[ ,2:7])
# Canonical correspondece analysis
vare.cca <- cca(drome$fish ~ Altitude+DSou+slope+width+Lmin+Dicharge,
data=drome$env[ ,2:7])
#Plot 2d
plot(vare.cca)
# Resumen de los estadísticos
summary(vare.cca)
# Calcular los Factores de Inflación de Varianza (VIF) para cada una de las restricciones
# (variables) de la matriz "env" (matriz ambiental).
# Si encontramos una variable ambiental con un VIF > 10,
# esta variable presenta colinealidad con otra u otras variables.
vif.cca(vare.cca)
# Canonical correspondece analysis
vare.cca2 <- cca(drome$fish ~ Altitude+slope+width+Lmin+Dicharge,
data=drome$env[ ,2:7])
# Calcular los Factores de Inflación de Varianza (VIF)
vif.cca(vare.cca)
# Calcular los Factores de Inflación de Varianza (VIF)
vif.cca(vare.cca2)
# Testing the significance of CCA axes
# (at least the first two or three should present a significant p value):
anova.cca(vare.cca, by="axis")
# Resumen de los estadísticos
summary(vare.cca)
# Resumen de los estadísticos
summary(vare.cca)
data(ecospat.testNichePOSNB)
library(ecospat)
data(ecospat.testNichePOSNB)
df<-ecospat.testNichePOSNB
# 1 axes
POSNB<-ecospat.nichePOSNB(df,colvar=c(2),colfreq = 6:17)
# 2 axes
POSNB<-ecospat.nichePOSNB(df,colvar=c(2:3),colfreq = 6:17)
ecospat.nicheNBmean(POSNB,w=c(2,1))
# 4 axes
POSNB<-ecospat.nichePOSNB(df,colvar=c(2:5),colfreq = 6:17)
ecospat.nicheNBmean(POSNB,w=c(1,0.8,0.2,0.1))
POSNB
ecospat.nicheNBmean(POSNB,w=c(1,0.8,0.2,0.1))
# Getting the data
# data set includes fish species occurrence along with environmental variables (Karasiewicz et al., 2017).
drome
