setwd("C:/Users/vicen/Documents/pcb_2025_2/Unidad_4/practica_4_phylomorphospace")
nsamples <- 10
#Generate the posterior distributions of mu (mean) and sigma (variance)
fish.par <- tapply(1:nrow(fish), fish$species,
function(ii) niw.post(nsamples = nsamples, X = fish[ii,2:4]))
library(geiger)
library(ape)
library(ggtree)
library(ggplot2)
library(nicheROVER)
# Explore the data
data(fish)
# Check the data
fish
nsamples <- 10
#Generate the posterior distributions of mu (mean) and sigma (variance)
fish.par <- tapply(1:nrow(fish), fish$species,
function(ii) niw.post(nsamples = nsamples, X = fish[ii,2:4]))
# format data for plotting function
fish.data <- tapply(1:nrow(fish), fish$species, function(ii) X = fish[ii,2:4])
clrs <- c("black", "red", "blue", "orange") # colors for each species
niche.plot(niche.par = fish.par, niche.data = fish.data, pfrac = .1,
iso.names = expression(delta^{15}*N, delta^{13}*C, delta^{34}*S),
col = clrs, xlab = expression("Isotope Ratio (per mille)"))
## Phylomorphospace
# Explore the database
data(sunfish.data)
sunfish.data
## set colors for mapped discrete character
#Set colors according to feeding mode
cols<-setNames(c("blue","orange"),
levels(sunfish.data$feeding.mode))
# plot the phylogenetic tree
plotTree(sunfish.tree,ftype="i",fsize=0.5,color="darkgrey",
offset=0.5)
# Add the tip colors to the tree
ecomorph_sunfish<-as.factor(getStates(sunfish.tree,"tips"))
## Phylomorphospace
# Explore the database
data(sunfish.data)
sunfish.data
## set colors for mapped discrete character
#Set colors according to feeding mode
cols<-setNames(c("blue","orange"),
levels(sunfish.data$feeding.mode))
# plot the phylogenetic tree
plotTree(sunfish.tree,ftype="i",fsize=0.5,color="darkgrey",
offset=0.5)
# plot the phylogenetic tree
data(sunfish.tree)
plotTree(sunfish.tree,ftype="i",fsize=0.5,color="darkgrey",
offset=0.5)
# Add the tip colors to the tree
ecomorph_sunfish<-as.factor(getStates(sunfish.tree,"tips"))
tiplabels(pie=to.matrix(ecomorph_sunfish[sunfish.tree$tip.label],
levels(ecomorph_sunfish)),piecol=cols,cex=0.3)
# Plot the phylomorphospace with colors as the tree
phylomorphospace(sunfish.tree,sunfish.data[2:3],
colors=cols,label="horizontal", bty="l", node.by.map=TRUE,
node.size=c(1.5,1.5), pch=19, xlab="relative buccal length",
ylab="relative gape width")
title(main="Phylomorphospace of buccal morphology in Centrarchidae",
font.main=1)
sunfish <- sunfish.data
nsamples <- 5
sunfish.par <- tapply(1:nrow(sunfish), as.factor(sunfish$feeding.mode),
function(ii) niw.post(nsamples = nsamples, X = sunfish[ii,2:3]))
# format data for plotting function
sunfish.data <- tapply(1:nrow(sunfish), as.factor(sunfish$feeding.mode),
function(ii) X = sunfish[ii,2:3])
clrs <- c("blue", "orange") # colors for each species
niche.plot(niche.par = sunfish.par, niche.data = sunfish.data, pfrac = .1,
iso.names = expression("Gape.width","Buccal.length"),
col = clrs, xlab = expression("Buccal measurements"))
#####Ellipses in the geography
library(raster)
library(ntbox)
library(ellipsenm)
library(rgdal)
library(sp)
#####PCA using Nichetoolbox
#Load some data
load("ellipses.RDATA")
# Selected vars
# calos.psilo.vars
load("C:\\Users\\vicen\\OneDrive\\Escritorio\\pcb_curso_2025-1_bases_ecologicas_y_genomicas\\PCB-2025-1-Bases-ecologicas-y-genomicas\\Unidad_2\\modelos_de_nicho_en_r/insumos_ecospat.RDATA")
# vars_6_subset <- subset(psilocalo.subset.vars,c("bio03", "bio05","bio06", "bio13", "bio14", "bio18"))
vars_6_subset
#PCA for 6 vars
pca_vars_6 <- spca(vars_6_subset)
pca_vars_6
plot(pca_vars_6[[1]])
# RAMDOMIZATION DO NOT REPEAT
colliei.data.split <- split_data(colliei.tables_r, method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.70)
formosa.data.split <- split_data(calocitta.tables_r, method = "random", longitude = "Longitude",
latitude = "Latitude", train_proportion = 0.70)
##
methods <- c("covmat", "mve1")
sets <- list(set_1 = c("PC1", "PC2", "PC3"),
set_2 = c("PC1", "PC2", "PC4")) # change as needed
variable_sets <- prepare_sets(pca_vars_6[[1]][[1:3]], sets)
calib_colliei <- ellipsoid_calibration(colliei.data.split, species = "area_m", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "colliei_calibration_results", overwrite = TRUE)
calib_colliei
###colliei
colliei.data.split$train[ , c("area_m", "Longitude", "Latitude")]
colliei.extract.pca <- raster::extract(pca_vars_6[[1]][[1:3]], colliei.data.split$train[ , c( "Longitude", "Latitude")])
colliei.extract.pca <-na.omit(colliei.extract.pca)
niche_sub <- ntbox::cov_center(colliei.extract.pca, mve = T,
level = 0.95,vars = c(1,2,3))
colliei_niche_geography <- ntbox::ellipsoidfit(envlayers = pca_vars_6$pc_layers[[c(1,2,3)]],
centroid = niche_sub$centroid,
covar = niche_sub$covariance, size=1)
########formosa
calib_formosa <- ellipsoid_calibration(formosa.data.split, species = "area_m", longitude = "Longitude",
latitude = "Latitude", variables = variable_sets,
methods = methods, level = 99, selection_criteria = "S_OR_P",
error = 5, iterations = 500, percentage = 50,
output_directory = "formosa_calibration_results", overwrite = TRUE)
calib_formosa
###formosa
formosa.data.split$train[ , c("area_m", "Longitude", "Latitude")]
formosa.extract.pca <- raster::extract(pca_vars_6[[1]][[1:3]], formosa.data.split$train[ , c( "Longitude", "Latitude")])
formosa.extract.pca <-na.omit(formosa.extract.pca)
niche_sub <- ntbox::cov_center(formosa.extract.pca, mve = T,
level = 0.95,vars = c(1,2,3))
formosa_niche_geography <- ntbox::ellipsoidfit(envlayers = pca_vars_6$pc_layers[[c(1,2,3)]],
centroid = niche_sub$centroid,
covar = niche_sub$covariance, size=1)
### Pairwise comparisons between ellipsoids
# Overlap object
colliei.niche.pca <- ellipsenm::overlap_object(colliei.data.split$train[ ,c(22,1,2)],
species =  "area_m",
longitude = "Longitude",
latitude = "Latitude", method = "covmat", level = 99,
variables = pca_vars_6$pc_layers[[1:3]])
formosa.niche.pca <- ellipsenm::overlap_object(formosa.data.split$train[ ,c(22,1,2)],
species =  "area_m",
longitude = "Longitude",
latitude = "Latitude", method = "covmat", level = 99,
variables = pca_vars_6$pc_layers[[1:3]])
# colliei - formosa
colliei.formosa.overlap.pca <- ellipsenm::ellipsoid_overlap(formosa.niche.pca,
colliei.niche.pca,
n_points = 1000000,
significance_test = TRUE,
replicates = 5,
confidence_limit = 0.05,
overlap_type = "all")
# Interseccion en el contexto de la aproximacion al Nicho Fundamental
ellipsenm::plot_overlap(colliei.formosa.overlap.pca,
background = T,
background_type = "full",
proportion = 0.95)
# Interseccion en el contexto de las Ms
ellipsenm::plot_overlap(colliei.formosa.overlap.pca,
background = T,
background_type = "back_union", legend = TRUE,
proportion = 0.95)
##############################
# cut all layers with total area calibration
transference_area <- crop(world_vars_subset, extent(america_back))
plot(america_back)
plot(transference_area)
transference_area_stack <- mask(transference_area, america_back)
plot(transference_area_stack)
# STACK
present_stack.s.c <- stack(transference_area_stack)
formosa_geography <- ellipsoid_model(data = formosa.data.split$train[ ,c(22,1,2)],
species = "area_m",
longitude = "Longitude",
latitude = "Latitude",
raster_layers = present_stack.s.c,  #vars.formosa.stack[[c(1,2,3)]],
method = "covmat",
level = 99,
replicates = 1,
replicate_type = "bootstrap",
bootstrap_percentage = 80,
projection_variables = list(projection = vars_6_subset),
prediction = "suitability",
return_numeric = TRUE,
format = "GTiff",
overwrite = TRUE,
output_directory = paste0("geographic_transferences/"))
# vars_6_subset <- subset(psilocalo.subset.vars,c("bio03", "bio05","bio06", "bio13", "bio14", "bio18"))
vars_6_subset
setwd("C:\\Users\\vicen\\OneDrive\\Escritorio\\pcb_curso_2025-1_bases_ecologicas_y_genomicas\\PCB-2025-1-Bases-ecologicas-y-genomicas\\Unidad_2\\modelos_de_nicho_en_r\\results/")
